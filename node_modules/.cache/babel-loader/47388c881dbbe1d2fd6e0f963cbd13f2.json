{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mojta\\\\OneDrive\\\\Desktop\\\\new\\\\my-app\\\\src\\\\components\\\\list.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AccordionMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.counter = counter => {\n      this.setState(prevState => ({\n        [counter]: prevState[counter] ? prevState[counter] + 1 : 1\n      }));\n    };\n\n    this.state = {\n      contentVisible: true\n    }; // bind event handler methods here (defined below) for callback to work\n\n    this.toggleContentVisible = this.toggleContentVisible.bind(this);\n  }\n\n  toggleContentVisible() {\n    // called at onClick of accordion button\n    // toggles contentVisible between true and false\n    this.setState(prevState => {\n      return {\n        contentVisible: !prevState.contentVisible\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"accordion_title\",\n          onClick: this.toggleContentVisible,\n          children: \"Accordion Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `accordion_content ${this.state.contentVisible ? \"show_content\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Main food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list_item_container text-xl flex space-x-20 flex justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl\",\n              children: \"Burger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl\",\n              children: \"21$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.counter(1),\n              children: [this.state[1] ? this.state[1] : 0, \" likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list_item_container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Item 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list_item_container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Item 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(AccordionMenu, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 19\n}, this), document.getElementById(\"root\"));\nexport default AccordionMenu;","map":{"version":3,"names":["React","ReactDOM","AccordionMenu","Component","constructor","props","counter","setState","prevState","state","contentVisible","toggleContentVisible","bind","render","document","getElementById"],"sources":["C:/Users/mojta/OneDrive/Desktop/new/my-app/src/components/list.js"],"sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\n\r\nclass AccordionMenu extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        contentVisible: true\r\n      };\r\n      // bind event handler methods here (defined below) for callback to work\r\n      this.toggleContentVisible = this.toggleContentVisible.bind(this);\r\n    }\r\n  \r\n    counter = (counter) => {\r\n      this.setState((prevState) => ({\r\n        [counter]: prevState[counter] ? prevState[counter] + 1 : 1,\r\n      }));\r\n    };\r\n\r\n    toggleContentVisible() {\r\n      // called at onClick of accordion button\r\n      // toggles contentVisible between true and false\r\n      this.setState((prevState) => {\r\n        return { contentVisible: !prevState.contentVisible };\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"accordion_container\">\r\n          <div className=\"accordion\">\r\n            {/* when button clicked, toggle the contentVisible value in our state*/}\r\n            <button\r\n              type=\"button\"\r\n              className=\"accordion_title\"\r\n              onClick={this.toggleContentVisible}\r\n            >\r\n              Accordion Menu\r\n            </button>\r\n          </div>\r\n          {/* For the below Div hide / show:\r\n              Using string literals, and a ternary if check on our states contentVisible value,\r\n              we append the .show_content CSS class if contentVisible === true\r\n              else we append the empty string if contentVisible === false\r\n              Note: We are just combining multiple CSS classes here to create different effects\r\n              Same as how we use CSS class combination in regular web pages to create visuals.\r\n          */}\r\n          <div\r\n            className={`accordion_content ${\r\n              this.state.contentVisible ? \"show_content\" : \"\"\r\n            }`}\r\n          >\r\n            <div>\r\n                <h1>Main food</h1>\r\n                <div className=\"list_item_container text-xl flex space-x-20 flex justify-center\">\r\n                    <div className=\"text-3xl\">Burger</div>\r\n                    <div className=\"text-3xl\">21$</div>\r\n                    <button onClick={() => this.counter(1)}>\r\n                      {this.state[1] ? this.state[1] : 0} likes\r\n                    </button>\r\n                </div>\r\n                <div className=\"list_item_container\">\r\n                    <p>Item 2</p>\r\n                </div>\r\n                <div className=\"list_item_container\">\r\n                    <p>Item 3</p>\r\n                </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<AccordionMenu />, document.getElementById(\"root\"));\r\n  export default AccordionMenu;\r\n  "],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAIA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;EACxCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KASnBC,OATmB,GASRA,OAAD,IAAa;MACrB,KAAKC,QAAL,CAAeC,SAAD,KAAgB;QAC5B,CAACF,OAAD,GAAWE,SAAS,CAACF,OAAD,CAAT,GAAqBE,SAAS,CAACF,OAAD,CAAT,GAAqB,CAA1C,GAA8C;MAD7B,CAAhB,CAAd;IAGD,CAbkB;;IAEjB,KAAKG,KAAL,GAAa;MACXC,cAAc,EAAE;IADL,CAAb,CAFiB,CAKjB;;IACA,KAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;EACD;;EAQDD,oBAAoB,GAAG;IACrB;IACA;IACA,KAAKJ,QAAL,CAAeC,SAAD,IAAe;MAC3B,OAAO;QAAEE,cAAc,EAAE,CAACF,SAAS,CAACE;MAA7B,CAAP;IACD,CAFD;EAGD;;EAEDG,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,qBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,WAAf;QAAA,uBAEE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,iBAFZ;UAGE,OAAO,EAAE,KAAKF,oBAHhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA,QADF,eAkBE;QACE,SAAS,EAAG,qBACV,KAAKF,KAAL,CAAWC,cAAX,GAA4B,cAA5B,GAA6C,EAC9C,EAHH;QAAA,uBAKE;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAK,SAAS,EAAC,iEAAf;YAAA,wBACI;cAAK,SAAS,EAAC,UAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAK,SAAS,EAAC,UAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ,eAGI;cAAQ,OAAO,EAAE,MAAM,KAAKJ,OAAL,CAAa,CAAb,CAAvB;cAAA,WACG,KAAKG,KAAL,CAAW,CAAX,IAAgB,KAAKA,KAAL,CAAW,CAAX,CAAhB,GAAgC,CADnC;YAAA;cAAA;cAAA;cAAA;YAAA,QAHJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eASI;YAAK,SAAS,EAAC,qBAAf;YAAA,uBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QATJ,eAYI;YAAK,SAAS,EAAC,qBAAf;YAAA,uBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAZJ;QAAA;UAAA;UAAA;UAAA;QAAA;MALF;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA6CD;;AAtEuC;;AAyE1CR,QAAQ,CAACY,MAAT,eAAgB,QAAC,aAAD;EAAA;EAAA;EAAA;AAAA,QAAhB,EAAmCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC;AACA,eAAeb,aAAf"},"metadata":{},"sourceType":"module"}