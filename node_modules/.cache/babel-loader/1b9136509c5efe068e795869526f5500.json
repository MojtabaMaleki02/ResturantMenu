{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport initializeAuthentication from '../config/firebase'; //initialize firebase  authentication\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const auth = getAuth();\n  const history = useHistory(); //on State Change \n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      }\n    });\n  }, [auth]); //sign up functionality\n\n  const signUpUser = (email, password, name, image) => {\n    createUserWithEmailAndPassword(auth, email, password).then(res => {\n      setUser(res.user);\n      updateProfile(auth.currentUser, {\n        displayName: name,\n        photoURL: image\n      }).then(() => {\n        swal(\"Good job!\", \"Account has been created!\", \"success\");\n        history.push('/');\n      });\n    }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\"));\n  }; //sign in functionality\n\n\n  const signInUser = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(res => {\n      setUser(res.user);\n      swal(\"Sign in Successful!\", \"Welcome back !\", \"info\");\n      history.push('/');\n    }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\"));\n  }; //google sign in \n\n\n  const signInWithGoogle = () => {\n    const googleProvider = new GoogleAuthProvider();\n    signInWithPopup(auth, googleProvider).then(res => {\n      setUser(res.user);\n      swal(\"Good job!\", \"Account has been created!\", \"success\");\n      history.push('/');\n    }).catch(err => console.log(err.message));\n  }; // sign out \n\n\n  const signOutUser = () => {\n    signOut(auth).then(() => {\n      setUser({});\n      swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\n      history.push('/signin');\n    }).catch(err => {\n      swal(\"Something went wrong!\", `${err.message}`, \"error\");\n    });\n  };\n\n  return {\n    user,\n    signUpUser,\n    signInUser,\n    signOutUser,\n    signInWithGoogle\n  };\n};\n\n_s(useFirebase, \"I5HnZBBAg42EY34UJmMjZTTo5oU=\", false, function () {\n  return [useHistory];\n});\n\nexport default useFirebase;","map":{"version":3,"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","useEffect","useState","useHistory","swal","initializeAuthentication","useFirebase","user","setUser","auth","history","signUpUser","email","password","name","image","then","res","currentUser","displayName","photoURL","push","catch","err","message","signInUser","signInWithGoogle","googleProvider","console","log","signOutUser"],"sources":["C:/Users/mojta/OneDrive/Desktop/new/my-app/src/hooks/useFirebase.js"],"sourcesContent":["import { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport initializeAuthentication from '../config/firebase';\n\n\n//initialize firebase  authentication\ninitializeAuthentication()\n\nconst useFirebase = () => {\n    const [user,setUser] = useState({});\n    const auth = getAuth();\n    const history = useHistory();\n\n    //on State Change \n    useEffect(() => {\n        onAuthStateChanged(auth,user => {\n            if (user) {\n                setUser(user)\n            }\n        })\n    },[auth])\n\n    //sign up functionality\n    const signUpUser = (email, password, name, image) => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((res) => {\n                setUser(res.user)\n                updateProfile(auth.currentUser, {\n                    displayName: name,\n                    photoURL: image\n                }).then(() => {\n                    swal(\"Good job!\", \"Account has been created!\", \"success\");\n                    history.push('/');\n                })\n\n            }).catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\"))\n    }\n\n    //sign in functionality\n    const signInUser = (email, password) => {\n        signInWithEmailAndPassword(auth, email , password)\n        .then(res => {\n            setUser(res.user);\n            swal(\"Sign in Successful!\", \"Welcome back !\", \"info\")\n            history.push('/');\n        })\n            .catch(err => swal(\"Something went wrong!\", `${err.message}`, \"error\"))\n    }\n\n\n    //google sign in \n    const signInWithGoogle = () => {\n        const googleProvider = new GoogleAuthProvider();\n        signInWithPopup(auth, googleProvider)\n        .then(res => {\n            setUser(res.user);\n            swal(\"Good job!\", \"Account has been created!\", \"success\");\n            history.push('/');\n        }).catch(err => console.log(err.message))\n    }\n\n    // sign out \n    const signOutUser = () => {\n        signOut(auth).then(() => {\n            setUser({});\n            swal(\"Logout Successful!\", \"You are logged out!\", \"success\");\n            history.push('/signin')\n        }).catch((err) => {\n            swal(\"Something went wrong!\", `${err.message}`, \"error\")\n        });\n    }\n\n    return {\n        user,\n        signUpUser,\n        signInUser,\n        signOutUser,\n        signInWithGoogle\n    }\n}\n\nexport default useFirebase\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}